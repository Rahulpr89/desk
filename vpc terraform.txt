first aws configure




resource "aws_vpc" "prod-vpc" {
  cidr_block = "10.0.0.0/16"
}

resource "aws_internet_gateway" "prod-igw" {
  vpc_id = aws_vpc.prod-vpc.id

  tags = {
    Name = "prod-igw"
  }
}

resource "aws_subnet" "public-subnet" {
  vpc_id     = aws_vpc.prod-vpc.id
  cidr_block = "10.0.0.0/24"

  tags = {
    Name = "public-subnet"
  }
}

resource "aws_subnet" "private-subnet" {
  vpc_id     = aws_vpc.prod-vpc.id
  cidr_block = "10.0.1.0/24"

  tags = {
    Name = "private-subnet"
  }
}

resource "aws_security_group" "test_access" {
  name        = "test_access"
  vpc_id      = aws_vpc.prod-vpc.id
  description = "allow ssh and http"

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }


}


resource "aws_route_table" "public-rt" {
  vpc_id = aws_vpc.prod-vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.prod-igw.id
  }

}

resource "aws_route_table_association" "public-rt-asso" {
  subnet_id      = aws_subnet.public-subnet.id
  route_table_id = aws_route_table.public-rt.id
}

resource "aws_instance" "dev-server" {
  ami             = "ami-0341d95f75f311023"
  subnet_id       = aws_subnet.public-subnet.id
  instance_type   = "t3.micro"
  security_groups = ["${aws_security_group.test_access.id}"]
  key_name        = "terra-admin"
  tags = {
    Name     = "dev-server"
    Stage    = "testing"
    Location = "mahape"
  }

}


resource "aws_eip" "dev-server-ec2-eip" {
  instance = aws_instance.dev-server.id
}


resource "aws_key_pair" "terra-admin" {
  key_name   = "terra-admin"
  public_key = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCTT11ntDDaXWNMq3UI4Rxw0glfc46wo+Efe7I0+4mlfECnEbVAPmt6c5TWk6vcQJ/QlIbNorlNl2JzQ4ozJKm0oGHGTNKYiAvz9sB/TNf/sG3iQhfFulvbstAyOKYGJsEnwio1ji8/1Mm5qXJ1iEBR+7qwnnjFcjjwUmq0b+uWp+hvqtG4hz7U2ErFb64+6//xOjcfgS8JaiCWz7ELGKqsqXZxSp/YT9JlWcxCHgcyGxqSDEHNt0hL0w7/01/MpvgBOqtxxEmmw4VWWL02rxCgiigjcmVWADmJnBLHXH8PWh13PQx4U9n3YDorOguVFda9pPkaCR/T0oVlHikQMpNY/n+FdCoUzvJPz/qAImVx1rPfe700QtxPCiVRIIhlanT7YY/cqzd0v/ferqaIGxvGh/8a4QS+EVG7/sUy54bMRwsq2Px3j57oo9fMEnBp9o92RIPexQmyLSNrKuIk0atVG39MK7qyJtNuUsX5xeNoJkY3SS2bnDQSDJW4OExF7SM= root@terra.example.com"
}

resource "aws_eip" "nat-eip" {
}
### create Nat gateway
resource "aws_nat_gateway" "my-ngw" {
  allocation_id = aws_eip.nat-eip.id
  subnet_id     = aws_subnet.public-subnet.id
}


resource "aws_route_table" "private-rt" {
  vpc_id = aws_vpc.prod-vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_nat_gateway.my-ngw.id
  }


  tags = {
    Name = "private-rt"
  }
}
##route table association code
resource "aws_route_table_association" "private-rt-asso" {
  subnet_id      = aws_subnet.private-subnet.id
  route_table_id = aws_route_table.private-rt.id
}


resource "aws_instance" "db-server" {
  ami             = "ami-0341d95f75f311023"
  subnet_id       = aws_subnet.private-subnet.id
  instance_type   = "t3.micro"
  security_groups = ["${aws_security_group.test_access.id}"]
  key_name        = "terra-admin"
  tags = {
    Name     = "db-server"
    Stage    = "testing"
    Location = "mahape"
  }

}